{"version":3,"sources":["App.module.css","App.js","reportWebVitals.js","index.js"],"names":["module","exports","App","useState","rent","setRent","allowance","formatter","Intl","NumberFormat","style","currency","className","styles","wrapper","row","label","type","input","onChange","e","target","value","span","format","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qHACAA,EAAOC,QAAU,CAAC,QAAU,qBAAqB,IAAM,iBAAiB,MAAQ,mBAAmB,MAAQ,mBAAmB,KAAO,kBAAkB,aAAa,0B,sICsBrJC,EApBH,WAAO,IAAD,EACQC,mBAAS,GADjB,mBACTC,EADS,KACHC,EADG,KAEVC,EAAY,IAAQF,EAAO,GAC3BG,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC/CC,MAAO,WACPC,SAAU,QAGZ,OACE,qBAAKC,UAAWC,IAAOC,QAAvB,SACE,sBAAKF,UAAWC,IAAOE,IAAvB,UACE,oBAAGH,UAAWC,IAAOG,MAArB,8BAA6C,mEAC7C,uBAAOC,KAAK,SAASL,UAAWC,IAAOK,MAAOC,SAAU,SAAAC,GAAC,OAAIf,EAAQe,EAAEC,OAAOC,UAC9E,mBAAGV,UAAS,UAAKC,IAAOG,MAAZ,YAAqBH,IAAO,eAAxC,mCACA,sBAAMD,UAAWC,IAAOU,KAAxB,SAA+BnB,GAAQG,EAAUiB,OAAOlB,WCLjDmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f92d11da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2Rh_f\",\"row\":\"App_row__1s1ax\",\"input\":\"App_input__2NxBo\",\"label\":\"App_label__v_mMj\",\"span\":\"App_span__36k48\",\"margin-top\":\"App_margin-top__3WLaM\"};","import { useState } from 'react';\nimport styles from './App.module.css';\n\nconst App = () => {\n  const [rent, setRent] = useState(0);\n  const allowance = 10000 - rent + 25;\n  const formatter = new Intl.NumberFormat('en-PH', {\n    style: 'currency',\n    currency: 'PHP'\n  });\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.row}>\n        <p className={styles.label}>Latest paid rent <small>(inclusive of transfer fee)</small></p>\n        <input type=\"number\" className={styles.input} onChange={e => setRent(e.target.value)} />\n        <p className={`${styles.label} ${styles['margin-top']}`}>Allowance to transfer</p>\n        <span className={styles.span}>{rent && formatter.format(allowance)}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}